{"version":3,"sources":["components/Header.js","components/Card.js","utils/api.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/PopupWithImage.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","Card","card","onCardClick","type","name","onClick","likes","length","api","options","this","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","method","then","_getResponse","about","body","JSON","stringify","link","cardId","id","avatarLink","avatar","authorization","Main","onEditAvatar","onEditProfile","onAddCard","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getProfile","getInitialCards","map","item","_id","catch","err","console","error","elem","key","Footer","PopupWithForm","title","isOpen","onClose","children","PopupWithImage","App","isEditAvatarPopupOpen","setIsOpenPopupAvatar","isAddPlacePopupOpen","setIsOpenPopupPlace","isEditProfilePopupOpen","setIsOpenPopupProfile","selectedCard","setSelectedCard","closeAllPopups","placeholder","required","pattern","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.469fc091.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<img className=\"header__logo\" src={logo} alt=\"Логотип\" />\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport function Card({card, onCardClick}) {\r\n\r\n\tfunction handleClick() {\r\n\t\tonCardClick(card);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<button type=\"button\" className=\"card__basket\" />\r\n\t\t\t\t<img className=\"card__image\" src={card.src} alt={card.name} onClick={handleClick} />\r\n\t\t\t\t<div className=\"card__container\">\r\n\t\t\t\t\t<h3 className=\"card__title\">{card.name}</h3>\r\n\t\t\t\t\t<div className=\"card__container-like\">\r\n\t\t\t\t\t\t<button className=\"card__like\" />\r\n\t\t\t\t\t\t<p className=\"card__number-likes\">{card.likes.length}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</ >\r\n\t);\r\n}\r\n\r\nexport default Card;"," class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _getResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`!!! Ошибка: ${res.status}`);\n    }\n  }\n\n  //получаем ответ по карточкам которые уже выложены\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._getResponse);\n  }\n\n  //получаем ответ по нашему профилю\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n\n    }).then(this._getResponse);\n  }\n\n  //обновляем данные о профиле\n  setProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._getResponse);\n  }\n\n  //отправляем данные о новой карточке\n  createCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._getResponse);\n  }\n\n  //удаляем карточку\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n      body: JSON.stringify({\n      })\n    });\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers,\n      body: JSON.stringify({\n        id: cardId\n      })\n    }).then(this._getResponse);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n      body: JSON.stringify({\n        id: cardId\n      })\n    }).then(this._getResponse);\n  }\n\n  //обновляем данные об аватаре\n  setAvatar(avatarLink) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarLink,\n      })\n    }).then(this._getResponse);\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\n  headers: {\n    authorization: '14553299-9691-455d-8f0e-78b62284ce7d',\n    'Content-Type': 'application/json'\n  }\n});\n\n\n\n\n","import React from 'react';\r\nimport Card from './Card';\r\nimport { api } from '../utils/api';\r\n\r\nfunction Main({ onEditAvatar, onEditProfile, onAddCard, onCardClick }) {\r\n  const [userName, setUserName] = React.useState('');\r\n  const [userDescription, setUserDescription] = React.useState('');\r\n  const [userAvatar, setUserAvatar] = React.useState('');\r\n\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    Promise.all([api.getProfile(), api.getInitialCards()])\r\n      .then((res) => {\r\n        setUserName(res[0].name);\r\n        setUserDescription(res[0].about);\r\n        setUserAvatar(res[0].avatar);\r\n        setCards(res[1].map(item => ({\r\n          id: item._id,\r\n          likes: item.likes,\r\n          name: item.name,\r\n          src: item.link\r\n        })));\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"profile\">\r\n        <div className=\"profile__avatar-container\" onClick={onEditAvatar}>\r\n          <img className=\"profile__avatar\" src={userAvatar} alt=\"Аватар\" />\r\n        </div>\r\n        <div className=\"profile__name-block\">\r\n          <h2 className=\"profile__name\">{userName}</h2>\r\n          <button type=\"button\" className=\"profile__edit\" onClick={onEditProfile}></button>\r\n          <p className=\"profile__profession\">{userDescription}</p>\r\n        </div>\r\n        <button type=\"button\" className=\"profile__button\" onClick={onAddCard}></button>\r\n      </section>\r\n      <section className=\"cards\">\r\n        {\r\n          cards.map(elem =>\r\n            <Card\r\n              card={elem}\r\n              key={elem.id}\r\n              onCardClick={onCardClick}\r\n            />)\r\n        }\r\n      </section>\r\n    </ >\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm({name, title, isOpen, onClose, children}) {\r\n    \r\n    return (\r\n        <div className={`popup popup_${name} ${isOpen ? \"popup_opened\" : \"\"}`}>\r\n          <div className=\"popup__grid\">\r\n            <button type=\"button\" className=\"popup__close-icon\" onClick={onClose} />\r\n            <form className={`popup__container popup__container_${name}`} name={`form_${name}`} >     {/* добавлен нижний слеш в name  novalidate */}\r\n              <h3 className=\"popup__title\">{title}</h3>\r\n              {children}\r\n              <button className=\"popup__button\" type=\"submit\">Сохранить</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction PopupWithImage({card, onClose}) {\r\n\r\n  return (\r\n    <div className={`popup popup_view-image ${card ? \"popup_opened\" : \"\"}`}>\r\n      <div className=\"popup__grid popup__grid_image\">\r\n        <button type=\"button\" className=\"popup__close-icon popup__close-icon_image\" onClick={onClose} />\r\n        <figure className=\"popup__figure\">\r\n          <img className=\"popup__image\" src={card?.src} alt=\"\" />\r\n          <figcaption className=\"popup__caption\">{card?.name}</figcaption>\r\n        </figure>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithImage;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport PopupWithImage from './PopupWithImage';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsOpenPopupAvatar] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsOpenPopupPlace] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsOpenPopupProfile] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  function handleEditAvatarClick() {\n    setIsOpenPopupAvatar(!isEditAvatarPopupOpen);\n  }\n\n  function handleEditPlaceClick() {\n    setIsOpenPopupPlace(!isAddPlacePopupOpen);\n  }\n\n  function handleEditProfileClick() {\n    setIsOpenPopupProfile(!isEditProfilePopupOpen);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsOpenPopupAvatar(false);\n    setIsOpenPopupPlace(false);\n    setIsOpenPopupProfile(false);\n    setSelectedCard(false);\n  }\n\n  return (\n    <div>\n      <main className=\"page\">\n\n        <Header />\n        <Main\n          onEditAvatar={handleEditAvatarClick}\n          onAddCard={handleEditPlaceClick}\n          onEditProfile={handleEditProfileClick}\n          onCardClick={handleCardClick}\n        />\n        <Footer />\n\n        <PopupWithForm\n          name='avatar'\n          title='Обновить аватар'\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n        >\n          <input\n            id=\"avatar-input\"\n            type=\"url\"\n            name=\"inputAvatar\"\n            placeholder=\"Ссылка на аватар\"\n            className=\"popup__input-text popup__input-text_type_avatar\"\n            required\n          />\n          <span id=\"avatar-input-error\" className=\"popup__input-error\"></span>\n        </ PopupWithForm>\n\n        <PopupWithForm\n          name='add_card'\n          title='Новое место'\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n        >\n          <input\n            id=\"place-input\"\n            type=\"text\"\n            name=\"inputCardName\"\n            placeholder=\"Название\"\n            className=\"popup__input-text popup__input-text_type_place\"\n            required\n          />\n          <span id=\"place-input-error\" className=\"popup__input-error\"></span>\n          <input\n            id=\"image-input\"\n            type=\"url\"\n            name=\"inputCardImage\"\n            placeholder=\"Ссылка на картинку\"\n            className=\"popup__input-text popup__input-text_type_image\"\n            required\n          />\n          <span id=\"image-input-error\" className=\"popup__input-error\"></span>\n        </ PopupWithForm>\n\n        <PopupWithForm\n          name='profile'\n          title='Редактировать профиль'\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n        >\n          <input\n            id=\"name-input\"\n            type=\"text\"\n            name=\"inputProfileName\"\n            placeholder=\"Имя\"\n            className=\"popup__input-text popup__input-text_type_name\"\n            required\n            pattern=\"^[a-zA-Zа-яА-Я\\s-]+$\"\n          />\n          <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n          <input\n            id=\"profession-input\"\n            type=\"text\"\n            name=\"inputProfileProfession\"\n            placeholder=\"Профессия\"\n            className=\"popup__input-text popup__input-text_type_job\"\n            required\n          />\n          <span id=\"profession-input-error\" className=\"popup__input-error\"></span>\n        </ PopupWithForm>\n\n        <PopupWithImage\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}